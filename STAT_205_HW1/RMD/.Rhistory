expectation_of_theta = sum(theta * posterior_theta)
expectation_of_theta
n = 7
y = 6
theta = c(0.3, 0.4, 0.5, 0.6, 0.7)
prior_theta = posterior_theta
likelihood_data = dbinom(y, n, theta) # likelihood of data
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta) #posterior
plot(theta, posterior_theta,col="red", type="b",
xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
par(new=TRUE)
plot(theta, prior_theta,col="black", type="b",
xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
legend(0.3, 1.25, legend=c(
expression(paste("updated posterior distribution for p(", theta, "| x = 3)")),
expression(paste("updated prior distribution for p(", theta, ")"))),
col=c("red", "black"), lty=1:2, cex=0.8)
theta = c(0, .125, .250, .375, .500, .625, .750, .875, 1)
prior_theta = c(.001, .001, .950, .008, .008, .008, .008, .008, .008)
prior_prob = sum(prior_theta[theta > 0.5])
prior_prob
n = 10
y = 7
prior_predictive = sum(dbinom(y, n, theta))
prior_predictive
n = 10
y = 6
likelihood_data = dbinom(y, n, theta) # likelihood of data
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta) #posterior
names(posterior_theta) = theta
round(posterior_theta, 2)
plot(theta, posterior_theta,col="green", type="b",
xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b",
xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
legend(0.3, 1.25, legend=c(
expression(paste("posterior distribution for p(", theta, "| x = 3)")),
expression(paste("prior distribution for p(", theta, ")"))),
col=c("green", "blue"), lty=1:2, cex=0.8)
names(posterior_theta) = theta
round(posterior_theta, 2)
plot(theta, posterior_theta,col="green", type="b",
xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b",
xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
legend(0.3, 1.25, legend=c(
expression(paste("posterior distribution for p(", theta, "| x = 3)")),
expression(paste("prior distribution for p(", theta, ")"))),
col=c("green", "blue"), lty=1:2, cex=0.8)
posterior_prob = sum(posterior_theta[theta > 0.5])
posterior_prob
theta = seq(0, 1, by=0.001)
prior_theta = rep(1/1001, 1001)
theta = seq(0, 1, by=0.02)
a = 2
b = 3
prior_theta = dbeta(theta, a, b)
plot(theta, prior_theta, ylab="density", type ="l", col=4)
?dbeta
n = 30
y = 14
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, posterior_theta,col="green", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
legend(0.3, 1.2, legend=c(expression(paste("posterior distribution for p(", theta, "| x = 3)")), expression(paste("prior distribution for p(", theta, ")"))),
col=c("green", "blue"), lty=1:2, cex=0.8)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, posterior_theta,col="green", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,1.3)))
legend(0.3, 2.2, legend=c("posterior distribution","prior distribution"),
col=c("green", "blue"), lty=1:2, cex=0.8)
plot(theta, posterior_theta,col="green", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.3, 2.2, legend=c("posterior distribution","prior distribution"),
col=c("green", "blue"), lty=1:2, cex=0.8)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, posterior_theta,col="green", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.7, 2.2, legend=c("posterior distribution","prior distribution"),
col=c("green", "blue"), lty=1:2, cex=0.8)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, posterior_theta,col="green", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("posterior distribution","prior distribution"),
col=c("green", "blue"), lty=1:2, cex=0.8)
plot(theta, posterior_theta, col="green", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="b", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("posterior distribution","prior distribution"),
col=c("green", "blue"), lty=1:2, cex=0.8)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, posterior_theta, col="green", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, prior_theta,col="blue", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("posterior distribution","prior distribution"),
col=c("green", "blue"), lty=1:2, cex=0.8)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, prior_theta,col="green", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, likelihood_data,col="blue", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, posterior_theta, col="red", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("prior distribution", "likelihood", "posterior distribution"),
col=c("green", "blue", "red"), lty=1:2, cex=0.8)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, prior_theta,col="green", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, likelihood_data,col="blue", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, posterior_theta, col="red", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("prior distribution", "likelihood", "posterior distribution"),
col=c("green", "blue", "red"), lty=1:3, cex=0.8)
v
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, prior_theta,col="green", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, likelihood_data,col="blue", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, posterior_theta, col="red", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("prior distribution", "likelihood", "posterior distribution"),
col=c("green", "blue", "red"), lty=1:1, cex=0.8)
prior_expectation = sum(theta * prior_theta)
posterior_expectation = sum(theta * posterior_theta)
prior_expectation
theta = seq(0, 1, by=0.02)
prior_theta = dbeta(theta, a, b)
prior_expectation = sum(theta * (prior_theta / sum(prior_theta)))
posterior_expectation = sum(theta * posterior_theta)
prior_expectation
posterior_prob = sum(posterior_expectation[theta > 0.25])
posterior_prob
a = 2
b = 3
n = 30
y = 14
theta = seq(0, 1, by=0.01)
prior_theta = dbeta(theta, a, b)
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta) / sum(likelihood_data * prior_theta)
plot(theta, prior_theta,col="green", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, likelihood_data,col="blue", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
par(new=TRUE)
plot(theta, posterior_theta, col="red", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0,2.3)))
legend(0.6, 2.2, legend=c("prior distribution", "likelihood", "posterior distribution"),
col=c("green", "blue", "red"), lty=1:1, cex=0.8)
prior_expectation = sum(theta * (prior_theta / sum(prior_theta)))
posterior_expectation = sum(theta * posterior_theta)
posterior_prob = sum(posterior_expectation[theta > 0.25])
posterior_prob
theta>0.25
posterior_prob = sum(posterior_theta[theta > 0.25])
posterior_prob
seq(0, 20, 1)
likelihood_data = dbinom(seq(0, 20, 1), 20, posterior_theta)
likelihood_data = dbinom(seq(0, 20, 1), 20, posterior_theta)
posterior_theta
likelihood_data = dbinom(5, 20, posterior_theta)
likelihood_data = sum(dbinom(5, 20, posterior_theta))
sum(posterior_theta)
df <- read.csv("basketball.csv", header = T)
View(df)
theta = seq(0, 1, by=0.01)
prior_theta = dbeta(theta, 1, 1)
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
prior_theta = dbeta(theta, 1, 1)
nrows(df)
nrow(df)
idx = 1
df$cmake[idx]
View(df)
c("prior distribution", df$players)
df$players
c("prior", c(df$players))
a = df$players
legend=c("prior", as.character(df$players))
c("prior", as.character(df$players))
?lines
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
prior_theta = dbeta(theta, 1, 1)
plot(theta, prior_theta,col="black", type="l", xlab = expression(theta), ylab = "probability", ylim=range(c(0, 2.3)))
par(new=TRUE)
for (idx in seq(1, nrow(df)))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta)
}
legend(0.6, 2.2, legend=c("prior", as.character(df$players)),
col=c("green", "blue", "red"), lty=1:1, cex=0.8)
library(RColorBrewer)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
colT=sample(color, 20)
nsample = nrow(df)
colors = sample(color, nsample)
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
prior_theta = dbeta(theta, 1, 1)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
nsample = nrow(df)
colors = sample(color, nsample)
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, color=colors[idx], xlab = expression(theta), ylab = "probability", ylim=range(c(0, 1.2)))
}
legend(0.6, 1.1, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
colors = sample(color, nsample)
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx], xlab = expression(theta), ylab = "probability", ylim=range(c(0, 1.2)))
}
legend(0.6, 1.1, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
colors = sample(color, nsample)
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx], xlab = expression(theta), ylab = "probability", ylim=range(c(0, 1.2)))
}
legend(0.6, 1.1, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
plot(new=TRUE)
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
prior_theta = dbeta(theta, 1, 1)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
nsample = nrow(df)
colors = sample(color, nsample)
plot(1,type='n', xlab = expression(theta), ylab = "probability", ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0.6, 1.1, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
prior_theta = dbeta(theta, 1, 1)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
nsample = nrow(df)
colors = sample(color, nsample)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0.6, 1.1, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
prior_theta = dbeta(theta, 1, 1)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
nsample = nrow(df)
colors = sample(color, nsample)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0., 1., legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0., 1.2, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
theta = seq(0, 1, by=0.05)
a = 1; b = 1;
prior_theta = dbeta(theta, a, b)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
nsample = nrow(df)
colors = sample(color, nsample)
probs = c(0.05, 0.25, 0.5, 0.75, 0.95)
S = 100000
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
posterior_theta = dbeta(theta, A, B)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0., 1.2, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
probs = c(0.05, 0.25, 0.5, 0.75, 0.95)
S = 100000
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0., 1.2, legend=c("prior", as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
S = 100000
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
likelihood_data = dbinom(y, n, theta)
posterior_theta = (likelihood_data * prior_theta)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0., 1.2, legend=c(as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
}
legend(0., 1.2, legend=c(as.character(df$players)),
col=colors, lty=1:1, cex=0.8)
library(RColorBrewer)
df <- read.csv("basketball.csv", header = T)
theta = seq(0, 1, by=0.05)
a = 1; b = 1;
prior_theta = dbeta(theta, a, b)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
nsample = nrow(df)
colors = sample(color, nsample)
probs = c(0.05, 0.25, 0.5, 0.75, 0.95)
S = 100000
data_summary = matrix(row =nsample, ncol = 6)
data_summary = matrix(nrow =nsample, ncol = 6)
data_summary = matrix(nrow =nsample, ncol = 6)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
theta_star = rbeta(S, A, B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
qtl = quantile(theta_star, probs= probs)
mn = mean(theta_star)
data_summary[idx, ] = c(mn, qtl)
}
View(data_summary)
data_summary = matrix(nrow =nsample, ncol = 6)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
theta_star = rbeta(S, A, B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
qtl = quantile(theta_star, probs= probs)
mn = mean(theta_star)
mn
data_summary[idx, ] = c(mn, qtl)
}
View(data_summary)
?data.frame
dt = as.data.frame(data_summary, as.character(df$players))
View(dt)
fields = c("mean", "5%", "25%", "50%", "75%", "95% percentile")
colnames(dt) = fields
View(dt)
library(knitr)
View(data_summary)
View(df)
View(dt)
dt = as.data.frame(sapply(data_summary, round, 2), as.character(df$players))
colnames(dt) = c("Player Name", "Mean", "5% percentile", "25% percentile", "50% percentile", "75% percentile", "95% percentile")
colnames(dt) = c("Mean", "5% percentile", "25% percentile", "50% percentile", "75% percentile", "95% percentile")
sapply(data_summary, round, 2)
View(df)
data_summary = matrix(nrow =nsample, ncol = 6)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
theta_star = rbeta(S, A, B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
qtl = quantile(theta_star, probs= probs)
mn = mean(theta_star)
data_summary[idx, ] = c(mn, qtl)
theta_cdf = ecdf(theta_star)
prob_greater_than_overall = theta_cdf(df$overall_proportion[idx])
print(prob_greater_than_overall)
}
View(data_summary)
View(df)
data_summary = matrix(nrow =nsample, ncol = 6)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
theta_star = rbeta(S, A, B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
qtl = quantile(theta_star, probs= probs)
mn = mean(theta_star)
data_summary[idx, ] = c(mn, qtl)
theta_cdf = ecdf(theta_star)
prob_greater_than_overall = theta_cdf(1.) - theta_cdf(df$overall_proportion[idx])
print(prob_greater_than_overall)
}
data_summary = matrix(nrow =nsample, ncol = 6)
plot(1,type='n', xlab = expression(theta), ylab = "probability",xlim = range(c(0, 1.0)), ylim=range(c(0, 1.2)))
prob_greater_than_overall = c()
for (idx in seq(1, nsample))
{
y = df$cmake[idx]
n = df$cattempts[idx]
A = y + a;
B = n - y + b;
theta_hat = A / (A + B)
theta_star = rbeta(S, A, B)
posterior_theta = dbeta(theta, A, B)
posterior_theta = posterior_theta/sum(posterior_theta)
lines(theta, posterior_theta, col=colors[idx])
qtl = quantile(theta_star, probs= probs)
mn = mean(theta_star)
data_summary[idx, ] = c(mn, qtl)
theta_cdf = ecdf(theta_star)
prob_greater_than_overall = c(prob_greater_than_overall, theta_cdf(1.) - theta_cdf(df$overall_proportion[idx]))
}
prob_greater_than_overall
